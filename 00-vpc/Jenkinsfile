pipeline {
    agent {
        label 'AGENT-1'
    }

    options {
        timeout(time: 30, unit: 'MINUTES')     //pipeline will fail if it runs more than 10 sec//
        disableConcurrentBuilds()             // we should not run two build at same time, so we need to use disableconcurrentbuilds//
        ansiColor('xterm')
    }

    parameters {
        choice(name: 'ACTION', choices: ['Apply', 'Destroy'], description: 'Select Action')
    }

    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                sh """
                    cd 00-vpc
                    terraform init -reconfigure
                    terraform plan -out=tfplan
                """
                }
            }
        }

        stage('Apply or Destroy') {
            input {
                message "Should we continue to ${params.ACTION}"
                ok "Yes, we should."
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                sh """
                    cd 00-vpc
                    if [ ${params.ACTION} == 'Apply' ]
                    then
                        terraform apply -auto-approve tfplan
                    elif [ ${params.ACTION} == 'Destroy' ]
                    then
                        terraform destroy -auto-approve
                    fi
                """
                }
            }
        }

        stage ('Trigger SG') {
            steps {
            build job: '10-sg', parameters: [string(name: 'ACTION', value: "Apply")], wait: false   //The pipeline does not wait for the 10-sg job to finish. It kicks it off and moves on immediately//
            }
        }
    }
        post { 
        always { 
            echo "This section run always"
            deleteDir()             // after pipeline is triggered, we can add deletedir function,it will delete the directory where jenkins file is there
        }
        success {
            echo "This section will run when pipeline success"
        }
        failure {
            echo "This section will run when pipeline failure"
        }
    }
}